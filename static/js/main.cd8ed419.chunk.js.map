{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactList/ContactListItem.module.css","components/ContactList/ContactList.module.css","App.module.css","redux/phonebook/phonebook-actions.js","redux/phonebook/phonebook-reducer.js","redux/store.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactListItem.js","components/ContactList/ContactList.js","App.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","addContact","createAction","name","number","payload","id","shortid","generate","deleteContact","changeFilter","items","createReducer","actions","state","filter","contact","_","combineReducers","contactsPersistConfig","key","storage","whitelist","store","configureStore","reducer","contacts","persistReducer","phonebookReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","devTools","process","persistor","persistStore","connect","dispatch","onFormSubmit","useState","setName","setNumber","handleChange","event","target","value","checkIfContactExists","find","toLowerCase","reset","className","s","form","onSubmit","preventDefault","alert","label","type","pattern","title","required","input","onChange","button","filterInput","ContactListItem","onContactDelete","item","onClick","normalizedFilter","includes","contactList","map","App","container","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.cd8ed419.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__1WrEw\",\"filterInput\":\"Filter_filterInput__OD64G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactListItem_item__273BP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__1Xj1_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2gyBK\"};","import { createAction } from '@reduxjs/toolkit';\r\nimport shortid from 'shortid';\r\n\r\nconst addContact = createAction('phonebook/addContact', ({ name, number }) => ({\r\n  payload: {\r\n    id: shortid.generate(),\r\n    name,\r\n    number,\r\n  },\r\n}));\r\n\r\nconst deleteContact = createAction('phonebook/deleteContact');\r\n\r\nconst changeFilter = createAction('phonebook/changeFilter');\r\n\r\nexport { addContact, deleteContact, changeFilter };\r\n","import { createReducer } from '@reduxjs/toolkit';\r\nimport { combineReducers } from 'redux';\r\nimport * as actions from './phonebook-actions';\r\n\r\nconst items = createReducer([], {\r\n  [actions.addContact]: (state, { payload }) => [...state, payload],\r\n  [actions.deleteContact]: (state, { payload }) =>\r\n    state.filter(contact => contact.id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [actions.changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport phonebookReducer from './phonebook/phonebook-reducer';\r\n\r\nconst contactsPersistConfig = {\r\n  key: 'contacts',\r\n  storage,\r\n  whitelist: ['items'],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(contactsPersistConfig, phonebookReducer),\r\n  },\r\n  middleware: getDefaultMiddleware =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }),\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n\r\nexport default store;\r\n","import { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addContact } from '../../redux/phonebook/phonebook-actions';\r\nimport PropTypes, { arrayOf } from 'prop-types';\r\nimport s from './ContactForm.module.css';\r\n\r\nfunction ContactForm({ contacts, onFormSubmit }) {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const handleChange = event => {\r\n    const { name, value } = event.target;\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    if (checkIfContactExists()) {\r\n      return alert(`${name} already in contacts`);\r\n    }\r\n\r\n    onFormSubmit({ name, number });\r\n\r\n    reset();\r\n  };\r\n\r\n  const checkIfContactExists = () => {\r\n    return contacts.find(\r\n      contact => contact.name.toLowerCase() === name.toLowerCase(),\r\n    );\r\n  };\r\n\r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <form className={s.form} onSubmit={handleSubmit}>\r\n      <label className={s.label}>\r\n        Name\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          className={s.input}\r\n          value={name}\r\n          onChange={handleChange}\r\n        />\r\n      </label>\r\n      <label className={s.label}>\r\n        Number\r\n        <input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          className={s.input}\r\n          value={number}\r\n          onChange={handleChange}\r\n        />\r\n      </label>\r\n      <button type=\"submit\" className={s.button}>\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: state.contacts.items,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onFormSubmit: contact => dispatch(addContact(contact)),\r\n});\r\n\r\nContactForm.propTypes = {\r\n  onFormSubmit: PropTypes.func.isRequired,\r\n  contacts: arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string,\r\n    }),\r\n  ),\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import { connect } from 'react-redux';\nimport { changeFilter } from '../../redux/phonebook/phonebook-actions';\nimport PropTypes from 'prop-types';\nimport s from './Filter.module.css';\n\nconst Filter = ({ value, onChange }) => (\n  <label className={s.filter}>\n    Find contacts by name\n    <input\n      type=\"text\"\n      value={value}\n      onChange={onChange}\n      className={s.filterInput}\n    ></input>\n  </label>\n);\n\nconst mapStateToProps = state => ({\n  value: state.contacts.filter,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: event => dispatch(changeFilter(event.target.value)),\n});\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import PropTypes from 'prop-types';\nimport s from './ContactListItem.module.css';\n\nconst ContactListItem = ({ name, number, onContactDelete }) => {\n  return (\n    <div className={s.item}>\n      {name}: {number}\n      <button type=\"button\" onClick={onContactDelete}>\n        Delete\n      </button>\n    </div>\n  );\n};\n\nContactListItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onContactDelete: PropTypes.func,\n};\n\nexport default ContactListItem;\n","import ContactListItem from './ContactListItem';\r\nimport { connect } from 'react-redux';\r\nimport { deleteContact } from '../../redux/phonebook/phonebook-actions';\r\nimport PropTypes, { arrayOf } from 'prop-types';\r\nimport s from './ContactList.module.css';\r\n\r\nconst ContactList = ({ contacts, onContactDelete }) => {\r\n  return (\r\n    <ul className={s.contactList}>\r\n      {contacts.map(({ id, name, number }) => {\r\n        return (\r\n          <li key={id}>\r\n            <ContactListItem\r\n              name={name}\r\n              number={number}\r\n              onContactDelete={() => onContactDelete(id)}\r\n            />\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  const { items, filter } = state.contacts;\r\n\r\n  const normalizedFilter = filter.toLowerCase();\r\n  const visibleContacts = items.filter(contact =>\r\n    contact.name.toLowerCase().includes(normalizedFilter),\r\n  );\r\n\r\n  return {\r\n    contacts: visibleContacts,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onContactDelete: id => dispatch(deleteContact(id)),\r\n});\r\n\r\nContactList.propTypes = {\r\n  contacts: arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string,\r\n    }),\r\n  ),\r\n  onContactDelete: PropTypes.func,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import ContactForm from './components/ContactForm/ContactForm';\r\nimport Filter from './components/Filter/Filter';\r\nimport ContactList from './components/ContactList/ContactList';\r\nimport s from './App.module.css';\r\n\r\nexport default function App() {\r\n  return (\r\n    <div className={s.container}>\r\n      <h1>Phonebook</h1>\r\n      <ContactForm />\r\n\r\n      <h2>Contacts</h2>\r\n      <Filter />\r\n      <ContactList />\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { persistor } from './redux/store';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport store from './redux/store';\r\nimport App from './App';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <PersistGate loading={null} persistor={persistor}>\r\n        <App />\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2f17Y\",\"label\":\"ContactForm_label__2VKJs\",\"input\":\"ContactForm_input__31gI6\",\"button\":\"ContactForm_button__23duZ\"};"],"sourceRoot":""}